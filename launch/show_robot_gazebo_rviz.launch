<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find my_robot_description)/urdf/my_robot.urdf.xacro"/>
  <arg name="rvizconfig" default="$(find my_robot_description)/rviz/urdf.rviz" />

  <!-- Pass the arguments to the gazebo launch file -->
  <include file="$(find my_robot_description)/launch/show_robot_gazebo.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="model" value="$(arg model)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Combines the joint-state-messages to the state of the robot-->
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
  </node>

  <!-- Starting rviz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  
  <!-- Load the yaml with the config for the state-publisher-controller-->
  <rosparam command="load" file="$(find my_robot_description)/config/joint_state_controller.yaml"
            ns="joint_state_controller" />


  <!-- Load controller configurations from YAML file to parameter server -->
  <rosparam command="load" file="$(find my_robot_description)/config/diff_drive_controller.yaml"
            ns="diff_drive_controller" />

  <!-- Spawn the controllers specified in args tag-->
  <node name="my_robot_controller_spawner" 
    pkg="controller_manager" 
    type="spawner"
    args="joint_state_controller
          diff_drive_controller"/>

  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
      <param name="default_topic" value="/diff_drive_controller/cmd_vel"/>
  </node>
</launch>
